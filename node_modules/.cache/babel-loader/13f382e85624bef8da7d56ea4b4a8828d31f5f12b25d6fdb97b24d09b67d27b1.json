{"ast":null,"code":"var _jsxFileName = \"/Users/pauledwards/family-dashboard/src/components/PocketMoneyTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PocketMoneyTracker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PocketMoneyTracker = ({\n  children,\n  completedJobs,\n  onJobComplete\n}) => {\n  _s();\n  const [allocations, setAllocations] = useState({});\n  const calculateJobValue = weeklyAmount => {\n    const baseValue = Math.floor(weeklyAmount / 3);\n    const remainder = weeklyAmount % 3;\n    return [baseValue, baseValue, baseValue + remainder];\n  };\n  const getCompletedJobsCount = childName => {\n    var _children$find;\n    return ((_children$find = children.find(child => child.name === childName)) === null || _children$find === void 0 ? void 0 : _children$find.jobs.filter((_, index) => completedJobs[`${childName}-${index}`]).length) || 0;\n  };\n  const calculateEarnings = child => {\n    const completedCount = getCompletedJobsCount(child.name);\n    const jobValues = calculateJobValue(child.weeklyAmount);\n    let totalEarned = 0;\n    for (let i = 0; i < completedCount; i++) {\n      totalEarned += jobValues[i];\n    }\n    return totalEarned;\n  };\n  const handleAllocationChange = (childName, category, amount) => {\n    setAllocations(prev => ({\n      ...prev,\n      [childName]: {\n        ...prev[childName],\n        [category]: Math.max(0, amount)\n      }\n    }));\n  };\n  const getAllocation = (childName, category) => {\n    var _allocations$childNam;\n    return ((_allocations$childNam = allocations[childName]) === null || _allocations$childNam === void 0 ? void 0 : _allocations$childNam[category]) || 1; // Minimum $1 for each category\n  };\n  const getTotalAllocated = childName => {\n    const child = allocations[childName];\n    if (!child) return 3; // Default minimum allocations\n    return (child.charity || 1) + (child.savings || 1) + (child.spending || 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pocket-money-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCB0 Weekly Pocket Money\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"children-grid\",\n      children: children.map(child => {\n        const jobValues = calculateJobValue(child.weeklyAmount);\n        const totalEarned = calculateEarnings(child);\n        const totalAllocated = getTotalAllocated(child.name);\n        const remaining = totalEarned - totalAllocated;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"child-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"child-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [child.name, \" (\", child.age, \" years old)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weekly-amount\",\n              children: [\"Weekly: $\", child.weeklyAmount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jobs-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\uD83D\\uDCCB Jobs This Week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), child.jobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job-item\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"job-checkbox\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: completedJobs[`${child.name}-${index}`] || false,\n                  onChange: e => onJobComplete(child.name, index, e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"job-text\",\n                  children: job\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"job-value\",\n                  children: [\"$\", jobValues[index]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"earnings-summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-earned\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Total Earned: $\", totalEarned]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"completed-jobs\",\n              children: [getCompletedJobsCount(child.name), \" of \", child.jobs.length, \" jobs completed\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"allocation-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\uD83D\\uDC9D Money Allocation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"allocation-grid\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"allocation-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"\\u2764\\uFE0F Charity (min $1):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"1\",\n                  max: totalEarned,\n                  value: getAllocation(child.name, 'charity'),\n                  onChange: e => handleAllocationChange(child.name, 'charity', parseInt(e.target.value))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"allocation-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"\\uD83C\\uDFE6 Savings (min $1):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"1\",\n                  max: totalEarned,\n                  value: getAllocation(child.name, 'savings'),\n                  onChange: e => handleAllocationChange(child.name, 'savings', parseInt(e.target.value))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"allocation-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"\\uD83D\\uDECD\\uFE0F Spending (min $1):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"1\",\n                  max: totalEarned,\n                  value: getAllocation(child.name, 'spending'),\n                  onChange: e => handleAllocationChange(child.name, 'spending', parseInt(e.target.value))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"allocation-summary\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `remaining ${remaining < 0 ? 'over-allocated' : ''}`,\n                children: [\"Remaining: $\", remaining, remaining < 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"warning\",\n                  children: \" (Over-allocated!)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, child.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(PocketMoneyTracker, \"yiiFlpl2pujvnCr+EaxPTQPtv/U=\");\n_c = PocketMoneyTracker;\nexport default PocketMoneyTracker;\nvar _c;\n$RefreshReg$(_c, \"PocketMoneyTracker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PocketMoneyTracker","children","completedJobs","onJobComplete","_s","allocations","setAllocations","calculateJobValue","weeklyAmount","baseValue","Math","floor","remainder","getCompletedJobsCount","childName","_children$find","find","child","name","jobs","filter","_","index","length","calculateEarnings","completedCount","jobValues","totalEarned","i","handleAllocationChange","category","amount","prev","max","getAllocation","_allocations$childNam","getTotalAllocated","charity","savings","spending","className","fileName","_jsxFileName","lineNumber","columnNumber","map","totalAllocated","remaining","age","job","type","checked","onChange","e","target","min","value","parseInt","_c","$RefreshReg$"],"sources":["/Users/pauledwards/family-dashboard/src/components/PocketMoneyTracker.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './PocketMoneyTracker.css';\n\nconst PocketMoneyTracker = ({ children, completedJobs, onJobComplete }) => {\n  const [allocations, setAllocations] = useState({});\n\n  const calculateJobValue = (weeklyAmount) => {\n    const baseValue = Math.floor(weeklyAmount / 3);\n    const remainder = weeklyAmount % 3;\n    return [baseValue, baseValue, baseValue + remainder];\n  };\n\n  const getCompletedJobsCount = (childName) => {\n    return children.find(child => child.name === childName)?.jobs.filter((_, index) => \n      completedJobs[`${childName}-${index}`]\n    ).length || 0;\n  };\n\n  const calculateEarnings = (child) => {\n    const completedCount = getCompletedJobsCount(child.name);\n    const jobValues = calculateJobValue(child.weeklyAmount);\n    let totalEarned = 0;\n    \n    for (let i = 0; i < completedCount; i++) {\n      totalEarned += jobValues[i];\n    }\n    \n    return totalEarned;\n  };\n\n  const handleAllocationChange = (childName, category, amount) => {\n    setAllocations(prev => ({\n      ...prev,\n      [childName]: {\n        ...prev[childName],\n        [category]: Math.max(0, amount)\n      }\n    }));\n  };\n\n  const getAllocation = (childName, category) => {\n    return allocations[childName]?.[category] || 1; // Minimum $1 for each category\n  };\n\n  const getTotalAllocated = (childName) => {\n    const child = allocations[childName];\n    if (!child) return 3; // Default minimum allocations\n    return (child.charity || 1) + (child.savings || 1) + (child.spending || 1);\n  };\n\n  return (\n    <div className=\"pocket-money-tracker\">\n      <h2>💰 Weekly Pocket Money</h2>\n      \n      <div className=\"children-grid\">\n        {children.map((child) => {\n          const jobValues = calculateJobValue(child.weeklyAmount);\n          const totalEarned = calculateEarnings(child);\n          const totalAllocated = getTotalAllocated(child.name);\n          const remaining = totalEarned - totalAllocated;\n          \n          return (\n            <div key={child.name} className=\"child-card\">\n              <div className=\"child-header\">\n                <h3>{child.name} ({child.age} years old)</h3>\n                <div className=\"weekly-amount\">Weekly: ${child.weeklyAmount}</div>\n              </div>\n\n              <div className=\"jobs-section\">\n                <h4>📋 Jobs This Week</h4>\n                {child.jobs.map((job, index) => (\n                  <div key={index} className=\"job-item\">\n                    <label className=\"job-checkbox\">\n                      <input\n                        type=\"checkbox\"\n                        checked={completedJobs[`${child.name}-${index}`] || false}\n                        onChange={(e) => onJobComplete(child.name, index, e.target.checked)}\n                      />\n                      <span className=\"job-text\">{job}</span>\n                      <span className=\"job-value\">${jobValues[index]}</span>\n                    </label>\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"earnings-summary\">\n                <div className=\"total-earned\">\n                  <strong>Total Earned: ${totalEarned}</strong>\n                </div>\n                <div className=\"completed-jobs\">\n                  {getCompletedJobsCount(child.name)} of {child.jobs.length} jobs completed\n                </div>\n              </div>\n\n              <div className=\"allocation-section\">\n                <h4>💝 Money Allocation</h4>\n                <div className=\"allocation-grid\">\n                  <div className=\"allocation-item\">\n                    <label>❤️ Charity (min $1):</label>\n                    <input\n                      type=\"number\"\n                      min=\"1\"\n                      max={totalEarned}\n                      value={getAllocation(child.name, 'charity')}\n                      onChange={(e) => handleAllocationChange(child.name, 'charity', parseInt(e.target.value))}\n                    />\n                  </div>\n                  <div className=\"allocation-item\">\n                    <label>🏦 Savings (min $1):</label>\n                    <input\n                      type=\"number\"\n                      min=\"1\"\n                      max={totalEarned}\n                      value={getAllocation(child.name, 'savings')}\n                      onChange={(e) => handleAllocationChange(child.name, 'savings', parseInt(e.target.value))}\n                    />\n                  </div>\n                  <div className=\"allocation-item\">\n                    <label>🛍️ Spending (min $1):</label>\n                    <input\n                      type=\"number\"\n                      min=\"1\"\n                      max={totalEarned}\n                      value={getAllocation(child.name, 'spending')}\n                      onChange={(e) => handleAllocationChange(child.name, 'spending', parseInt(e.target.value))}\n                    />\n                  </div>\n                </div>\n                \n                <div className=\"allocation-summary\">\n                  <div className={`remaining ${remaining < 0 ? 'over-allocated' : ''}`}>\n                    Remaining: ${remaining}\n                    {remaining < 0 && <span className=\"warning\"> (Over-allocated!)</span>}\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default PocketMoneyTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}